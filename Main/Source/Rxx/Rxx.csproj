<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="..\..\packages\WhiteTie.1.3.16\build\WhiteTie.props" Condition="Exists('..\..\packages\WhiteTie.1.3.16\build\WhiteTie.props')" />
  <PropertyGroup>
    <IntermediateOutputPath>obj\$(Configuration)\</IntermediateOutputPath>
    <OutputPath>bin\$(Configuration)\</OutputPath>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{BB21496A-6494-46B1-B6C3-DB9A22EB9BF3}</ProjectGuid>
    <TargetFrameworkVersion>v4.5.1</TargetFrameworkVersion>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">..\..\</SolutionDir>
    <RestorePackages>true</RestorePackages>
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <TargetFrameworkVersion>v4.5.1</TargetFrameworkVersion>
    <OutputPath>bin\Debug\</OutputPath>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Profiling|AnyCPU' ">
    <TargetFrameworkVersion>v4.5.1</TargetFrameworkVersion>
    <OutputPath>bin\Profiling\</OutputPath>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Analysis|AnyCPU' ">
    <TargetFrameworkVersion>v4.5.1</TargetFrameworkVersion>
    <OutputPath>bin\Analysis\</OutputPath>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <TargetFrameworkVersion>v4.5.1</TargetFrameworkVersion>
    <OutputPath>bin\Release\</OutputPath>
    <Prefer32Bit>false</Prefer32Bit>
  </PropertyGroup>
  <PropertyGroup>
    <OutputFile>$(OutputPath)$(MSBuildProjectName).nupkg</OutputFile>
    <BuildPackage>True</BuildPackage>
  </PropertyGroup>
  <PropertyGroup>
    <NuSpecTitle>Extensions for Reactive Extensions (Rx)</NuSpecTitle>
    <NuSpecVersion>2.0.0</NuSpecVersion>
    <NuSpecAuthors>Dave Sexton</NuSpecAuthors>
    <NuSpecOwners>Dave Sexton</NuSpecOwners>
    <NuSpecDescription>Reactive LINQ extensions, bindings and types supplementary to Microsoft's Reactive Extensions for .NET (Rx).</NuSpecDescription>
    <NuSpecSummary>Reactive LINQ extensions, bindings and types.</NuSpecSummary>
    <NuSpecCopyright>Copyright © 2011-2015 Rxx</NuSpecCopyright>
    <NuSpecLicenseUrl>http://rxx.codeplex.com/license</NuSpecLicenseUrl>
    <NuSpecProjectUrl>http://rxx.codeplex.com</NuSpecProjectUrl>
    <NuSpecReleaseNotes>http://rxx.codeplex.com/releases</NuSpecReleaseNotes>
    <NuSpecIconUrl>http://download.codeplex.com/Project/Download/FileDownload.aspx?ProjectName=rxx&amp;DownloadId=243622</NuSpecIconUrl>
    <NuSpecTags>Rx Reactive Extensions Observable .NET LINQ Events</NuSpecTags>
  </PropertyGroup>
  <PropertyGroup>
    <OutputType>Library</OutputType>
  </PropertyGroup>
  <PropertyGroup>
    <StartupObject />
  </PropertyGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Rxx.Bindings-Net451\Rxx.Bindings-Net451.csproj">
      <Project>{145aa2e0-72de-4ac0-beee-bc7c469249b2}</Project>
      <Name>Rxx.Bindings-Net451</Name>
    </ProjectReference>
    <ProjectReference Include="..\Rxx.Diagnostics-Net451\Rxx.Diagnostics-Net451.csproj">
      <Project>{8078a82a-f888-476d-83fe-395d2b4003c9}</Project>
      <Name>Rxx.Diagnostics-Net451</Name>
    </ProjectReference>
    <ProjectReference Include="..\Rxx.Linq-Net451\Rxx.Linq-Net451.csproj">
      <Project>{72156215-ca6c-4c2b-a9fe-dc519c1daca9}</Project>
      <Name>Rxx.Linq-Net451</Name>
    </ProjectReference>
    <ProjectReference Include="..\Rxx.Parsers-Net451\Rxx.Parsers-Net451.csproj">
      <Project>{55c668ab-c93f-45e5-bc49-8adf3ab5bf3a}</Project>
      <Name>Rxx.Parsers-Net451</Name>
    </ProjectReference>
    <ProjectReference Include="..\Rxx.Server-Net451\Rxx.Server-Net451.csproj">
      <Project>{ef881daa-fbab-40af-9ef7-230d2914d0ce}</Project>
      <Name>Rxx.Server-Net451</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(SolutionDir)\.nuget\NuGet.targets" Condition="Exists('$(SolutionDir)\.nuget\NuGet.targets')" />
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Enable NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('$(SolutionDir)\.nuget\NuGet.targets')" Text="$([System.String]::Format('$(ErrorText)', '$(SolutionDir)\.nuget\NuGet.targets'))" />
    <Error Condition="!Exists('..\..\packages\WhiteTie.1.3.16\build\WhiteTie.props')" Text="$([System.String]::Format('$(ErrorText)', '..\..\packages\WhiteTie.1.3.16\build\WhiteTie.props'))" />
    <Error Condition="!Exists('..\..\packages\WhiteTie.1.3.16\build\WhiteTie.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\..\packages\WhiteTie.1.3.16\build\WhiteTie.targets'))" />
  </Target>
  <Import Project="..\..\packages\WhiteTie.1.3.16\build\WhiteTie.targets" Condition="Exists('..\..\packages\WhiteTie.1.3.16\build\WhiteTie.targets')" />
  <Target Name="Clean">
    <Delete Files="$(OutputFile)" />
  </Target>
  <Target Name="Build">
    <!-- 
		White Tie handles all aspects of building the NuGet package based on project references.
		Its only requirement is that a Build target is defined here since this project isn't a
		typical C# project - it doesn't reference any of the normal MSBuild targets files to 
		ensure that no assembly is compiled.
		-->
  </Target>
  <Target Name="Rebuild" DependsOnTargets="Clean;Build">
  </Target>
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\bin\Microsoft.CSharp.CurrentVersion.targets" />
</Project>